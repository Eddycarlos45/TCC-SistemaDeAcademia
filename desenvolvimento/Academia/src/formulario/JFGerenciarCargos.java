/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import dao.DAOCargos;
import entidade.Cargos;
import entidade.Funcionarios;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lab01_Aluno
 */
public final class JFGerenciarCargos extends javax.swing.JFrame {

    /**
     * Creates new form JFGerenciarCargos
     */
    Funcionarios acesso_funci;

    public JFGerenciarCargos(Funcionarios funci) throws ClassNotFoundException, SQLException, ParseException {
        initComponents();

        acesso_funci = funci;

        populaTabelaCargo();
    }

    JFGerenciarCargos() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBNovoCadastro = new javax.swing.JButton();
        jBCadastrarCargo = new javax.swing.JButton();
        jBEditarCargo = new javax.swing.JButton();
        jBExcluirCargo = new javax.swing.JButton();
        jPSelecaoCargo = new javax.swing.JPanel();
        jTFProcurarCargo = new javax.swing.JTextField();
        jLProcurarCargo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCargo = new javax.swing.JTable();
        jPFormularioCargo = new javax.swing.JPanel();
        jTFCargo = new javax.swing.JTextField();
        jLCargo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Permissões");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jBNovoCadastro.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jBNovoCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inter_face/imagem/1297713679_list-add-user (Custom).png"))); // NOI18N
        jBNovoCadastro.setText("Novo Cadastro");
        jBNovoCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoCadastroActionPerformed(evt);
            }
        });

        jBCadastrarCargo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jBCadastrarCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inter_face/imagem/bloggif_5805611bcc99c.png"))); // NOI18N
        jBCadastrarCargo.setText("Cadastrar Cargo");
        jBCadastrarCargo.setEnabled(false);
        jBCadastrarCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarCargoActionPerformed(evt);
            }
        });

        jBEditarCargo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jBEditarCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inter_face/imagem/clip_paste.png"))); // NOI18N
        jBEditarCargo.setText("Editar Cargo");
        jBEditarCargo.setEnabled(false);
        jBEditarCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarCargoActionPerformed(evt);
            }
        });

        jBExcluirCargo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jBExcluirCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inter_face/imagem/bin-full-icon (Custom).png"))); // NOI18N
        jBExcluirCargo.setText("Excluir Cargo");
        jBExcluirCargo.setEnabled(false);
        jBExcluirCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirCargoActionPerformed(evt);
            }
        });

        jPSelecaoCargo.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione um Cargo"));

        jTFProcurarCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFProcurarCargoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTFProcurarCargoMouseReleased(evt);
            }
        });
        jTFProcurarCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFProcurarCargoKeyReleased(evt);
            }
        });

        jLProcurarCargo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLProcurarCargo.setText("Procurar:");

        jTCargo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Cargo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCargo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTCargoMouseDragged(evt);
            }
        });
        jTCargo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCargoMouseClicked(evt);
            }
        });
        jTCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCargoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTCargo);

        javax.swing.GroupLayout jPSelecaoCargoLayout = new javax.swing.GroupLayout(jPSelecaoCargo);
        jPSelecaoCargo.setLayout(jPSelecaoCargoLayout);
        jPSelecaoCargoLayout.setHorizontalGroup(
            jPSelecaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSelecaoCargoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSelecaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPSelecaoCargoLayout.createSequentialGroup()
                        .addComponent(jLProcurarCargo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFProcurarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPSelecaoCargoLayout.setVerticalGroup(
            jPSelecaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSelecaoCargoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSelecaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLProcurarCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTFProcurarCargo, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPFormularioCargo.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulário de Cargos"));

        jTFCargo.setEnabled(false);
        jTFCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCargoKeyReleased(evt);
            }
        });

        jLCargo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLCargo.setText("Cargo:");

        javax.swing.GroupLayout jPFormularioCargoLayout = new javax.swing.GroupLayout(jPFormularioCargo);
        jPFormularioCargo.setLayout(jPFormularioCargoLayout);
        jPFormularioCargoLayout.setHorizontalGroup(
            jPFormularioCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFormularioCargoLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPFormularioCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLCargo)
                    .addComponent(jTFCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPFormularioCargoLayout.setVerticalGroup(
            jPFormularioCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFormularioCargoLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLCargo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPSelecaoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPFormularioCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBNovoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jBCadastrarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jBEditarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(jBExcluirCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPSelecaoCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPFormularioCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBExcluirCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCadastrarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBNovoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBEditarCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(968, 441));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBNovoCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoCadastroActionPerformed
        // TODO add your handling code here:
        
        jTCargo.clearSelection();

        //ANULA TEXTO CAMPOS
        jTFCargo.setText(null);

        //ATIVA CAMPOS
        jTFCargo.setEnabled(true);

        //ATIVA BOTÃO CADASTRAR
        jBCadastrarCargo.setEnabled(true);

        //DESATIVA BOTÕES
        jBEditarCargo.setEnabled(false);
        jBExcluirCargo.setEnabled(false);

    }//GEN-LAST:event_jBNovoCadastroActionPerformed

    private void jBCadastrarCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarCargoActionPerformed
        try {
            // TODO add your handling code here:

            //ARMAZENA DADOS DO CARGO
            Cargos cargo = new Cargos();

            if (jTFCargo.getText().isEmpty() == false) {
                cargo.setNome_cargo(jTFCargo.getText());
            } else {
                jTFCargo.setBackground(Color.RED);
            }

            if (jTFCargo.getText().isEmpty() == true) {
                JOptionPane.showMessageDialog(rootPane, "Não é permitido CADASTRAR um CARGO sem :"
                        + "\n"
                        + "NOME;", "Cadastro não permitido", 1);
            }

            if (jTFCargo.getText().isEmpty() == false) {
                //CADASTRA CARGO
                DAOCargos daocargo = new DAOCargos();

                daocargo.cadastrarCargo(cargo);

                populaTabelaCargo();
                
                jTCargo.clearSelection();

                //LIMPA E DESATIVA CAMPOS E BOTÕES
                organizaCampos();
            }

        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBCadastrarCargoActionPerformed

    private void jBEditarCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarCargoActionPerformed
        // TODO add your handling code here:

        try {

            if (jTCargo.getSelectedRow() != -1) {

                DefaultTableModel modelo = (DefaultTableModel) jTCargo.getModel();

                if (modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(2)) {
                    JOptionPane.showMessageDialog(rootPane, "Não é permitido editar o cargo ADIMINISTRADOR !");
                }

                if (!modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(2)) {

                    Cargos cargo = new Cargos();
                    cargo.setId_cargo((int) modelo.getValueAt(jTCargo.getSelectedRow(), 0));
                    cargo.setNome_cargo(jTFCargo.getText());

                    DAOCargos daocargo = new DAOCargos();
                    daocargo.editarCargo(cargo);

                    populaTabelaCargo();

                    jTCargo.clearSelection();
                    
                    //LIMPA E DESATIVA CAMPOS E BOTÕES
                    organizaCampos();

                }

            }

        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBEditarCargoActionPerformed

    private void jBExcluirCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirCargoActionPerformed
        // TODO add your handling code here:

        try {
            DefaultTableModel modelo = (DefaultTableModel) jTCargo.getModel();
            DAOCargos daocargo = new DAOCargos();

            if (jTCargo.getSelectedRow() != -1) {

                if (modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(2)) {
                    JOptionPane.showMessageDialog(rootPane, "Não é permitido excluir o cargo ADMINISTRADOR !");
                }

                if (!modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(2)) {

                    int confirma = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir?", null, 1);
                    if (confirma == JOptionPane.YES_OPTION) {
                        Cargos cargo = new Cargos();
                        cargo.setId_cargo((int) modelo.getValueAt(jTCargo.getSelectedRow(), 0));
                        daocargo.apagarCargo(cargo);

                        populaTabelaCargo();

                        jTCargo.clearSelection();
                        
                        //LIMPA E DESATIVA CAMPOS E BOTÕES
                        organizaCampos();
                    }

                    if (confirma == JOptionPane.NO_OPTION) {
                        JOptionPane.showMessageDialog(null, "Não Excluído!");
                    }
                    if (confirma == JOptionPane.CANCEL_OPTION) {

                    }
                    if (confirma == JOptionPane.CLOSED_OPTION) {

                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Nenhum Registro Selecionado!");
                }

            }

        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            Logger.getLogger(JFGerenciarAlunos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBExcluirCargoActionPerformed

    private void jTCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCargoMouseClicked
        // TODO add your handling code here:
        if (jTCargo.getSelectedRow() != -1) {

            DefaultTableModel modelo = (DefaultTableModel) jTCargo.getModel();

            if (modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(1)) {
                jTFCargo.setText(null);
                jTFCargo.setEnabled(false);
                jBEditarCargo.setEnabled(false);
                jBExcluirCargo.setEnabled(false);
                jBCadastrarCargo.setEnabled(false);
                
                JOptionPane.showMessageDialog(rootPane, "Não é permitido alterar o cargo ADMINISTRADOR!");
                
                jTCargo.clearSelection();
                
            } else {

                jTFCargo.setEnabled(true);;
                jBEditarCargo.setEnabled(true);
                jBExcluirCargo.setEnabled(true);

                Cargos cargo = new Cargos();
                cargo.setId_cargo((int) modelo.getValueAt(jTCargo.getSelectedRow(), 0));
                
                try {
                    Cargos car = new Cargos();
                    DAOCargos daocargo = new DAOCargos();
                    car = daocargo.buscarCargo(cargo);

                    jTFCargo.setText(car.getNome_cargo());

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
                }
                jBCadastrarCargo.setEnabled(false);
                jBEditarCargo.setEnabled(true);
                jBExcluirCargo.setEnabled(true);

            }
        }

    }//GEN-LAST:event_jTCargoMouseClicked

    private void jTFProcurarCargoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFProcurarCargoMouseReleased


    }//GEN-LAST:event_jTFProcurarCargoMouseReleased

    private void jTFProcurarCargoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFProcurarCargoKeyReleased
        // TODO add your handling code here:
        
        jTCargo.clearSelection();

        try {
            // TODO add your handling code here:

            populaTabelaCargo();

        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTFProcurarCargoKeyReleased

    private void jTFCargoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCargoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCargoKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:

        dispose();

        JFFormularioPrincipal form = new JFFormularioPrincipal(acesso_funci);
        form.setVisible(true);

    }//GEN-LAST:event_formWindowClosing

    private void jTFProcurarCargoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFProcurarCargoMouseClicked
        // TODO add your handling code here:
        
        jTCargo.clearSelection();
        
    }//GEN-LAST:event_jTFProcurarCargoMouseClicked

    private void jTCargoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCargoMouseDragged
        // TODO add your handling code here:
        
        jTCargo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }//GEN-LAST:event_jTCargoMouseDragged

    private void jTCargoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCargoKeyReleased
        // TODO add your handling code here:
        
        if (jTCargo.getSelectedRow() != -1) {

            DefaultTableModel modelo = (DefaultTableModel) jTCargo.getModel();

            if (modelo.getValueAt(jTCargo.getSelectedRow(), 0).equals(1)) {
                jTFCargo.setText(null);
                jTFCargo.setEnabled(false);
                jBEditarCargo.setEnabled(false);
                jBExcluirCargo.setEnabled(false);
                jBCadastrarCargo.setEnabled(false);
                
                JOptionPane.showMessageDialog(rootPane, "Não é permitido alterar o cargo ADMINISTRADOR!");
                
                jTCargo.clearSelection();
                
            } else {

                jTFCargo.setEnabled(true);;
                jBEditarCargo.setEnabled(true);
                jBExcluirCargo.setEnabled(true);

                Cargos cargo = new Cargos();
                cargo.setId_cargo((int) modelo.getValueAt(jTCargo.getSelectedRow(), 0));
                
                try {
                    Cargos car = new Cargos();
                    DAOCargos daocargo = new DAOCargos();
                    car = daocargo.buscarCargo(cargo);

                    jTFCargo.setText(car.getNome_cargo());

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
                }
                jBCadastrarCargo.setEnabled(false);
                jBEditarCargo.setEnabled(true);
                jBExcluirCargo.setEnabled(true);

            }
        }
        
    }//GEN-LAST:event_jTCargoKeyReleased

    public void populaTabelaCargo() throws ClassNotFoundException, SQLException, ParseException {

        try {

            Cargos cargo = new Cargos();
            cargo.setNome_cargo(jTFProcurarCargo.getText());

            DAOCargos daocargo = new DAOCargos();
            List<Cargos> lista = daocargo.PesquisaCargo(cargo);

            DefaultTableModel modelo = (DefaultTableModel) jTCargo.getModel();
            modelo.getDataVector().removeAllElements();

            for (int i = 0; i < lista.size(); i++) {
                modelo.addRow(new Object[]{
                    lista.get(i).getId_cargo(),
                    lista.get(i).getNome_cargo()
                });
            }

            if (lista.isEmpty() == true) {

                for (int i = 0; i < 1; i++) {
                    modelo.addRow(new Object[]{null});
                    modelo.removeRow(i);
                    modelo.addRow(new Object[]{"VAZIO", "VAZIO", "VAZIO"});
                }

            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(JFGerenciarCargos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void organizaCampos() {
        //ANULA TEXTO CAMPOS
        jTFCargo.setText(null);

        //ATIVA CAMPOS
        jTFCargo.setEnabled(false);

        //DESATIVA BOTÕES
        jBCadastrarCargo.setEnabled(false);
        jBEditarCargo.setEnabled(false);
        jBExcluirCargo.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFGerenciarCargos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFGerenciarCargos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCadastrarCargo;
    private javax.swing.JButton jBEditarCargo;
    private javax.swing.JButton jBExcluirCargo;
    private javax.swing.JButton jBNovoCadastro;
    private javax.swing.JLabel jLCargo;
    private javax.swing.JLabel jLProcurarCargo;
    private javax.swing.JPanel jPFormularioCargo;
    private javax.swing.JPanel jPSelecaoCargo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTCargo;
    private javax.swing.JTextField jTFCargo;
    private javax.swing.JTextField jTFProcurarCargo;
    // End of variables declaration//GEN-END:variables
}
